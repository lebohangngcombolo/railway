"""empty message

Revision ID: 569b823bb5be
Revises: 49642baa0496
Create Date: 2025-07-02 14:45:18.057004

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '569b823bb5be'
down_revision = '49642baa0496'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('beneficiary')
    with op.batch_alter_table('transaction', schema=None) as batch_op:
        batch_op.add_column(sa.Column('fee', sa.Float(), nullable=True))
        batch_op.add_column(sa.Column('net_amount', sa.Float(), nullable=False))

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('transaction', schema=None) as batch_op:
        batch_op.drop_column('net_amount')
        batch_op.drop_column('fee')

    op.create_table('beneficiary',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('full_name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('id_number', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('profile_picture', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('date_of_birth', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('phone', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(length=120), autoincrement=False, nullable=True),
    sa.Column('address', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('account_number', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('bank_name', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('beneficiary_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('beneficiary_pkey'))
    )
    # ### end Alembic commands ###
